<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CommandLine</name>
    </assembly>
    <members>
        <member name="M:CommandLine.Tests.ParserFixture.ShortOptionRefusesEqualToken">
            <summary>
            Ref.: #BUG0000.
            </summary>
        </member>
        <member name="M:CommandLine.Tests.ParserFixture.CanNotCreateParserInstance">
            <summary>
            Ref.: #BUG0001
            </summary>
        </member>
        <member name="T:CommandLine.HelpText">
            <summary>
            Models an help text and collects related informations.
            You can assign it where you assign any <see cref="T:System.String"/> instance.
            </summary>
        </member>
        <member name="M:CommandLine.HelpText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandLine.HelpText"/> class
            specifying the program name.
            </summary>
            <param name="programName">The program name printed out in the help screen.</param>
        </member>
        <member name="M:CommandLine.HelpText.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandLine.HelpText"/> class
            specifying the program name and version.
            </summary>
            <param name="programName">The program name printed out in the help screen.</param>
            <param name="version">The program version printed out in the help screen.</param>
        </member>
        <member name="M:CommandLine.HelpText.AddLicenseLine(System.String)">
            <summary>
            Adds a text line with license informations.
            </summary>
            <param name="value">A <see cref="T:System.String"/> instance that contains license informations.</param>
        </member>
        <member name="M:CommandLine.HelpText.AddUsageLine(System.String)">
            <summary>
            Adds a text line with usage informations.
            </summary>
            <param name="value">A <see cref="T:System.String"/> instance that contains usage informations.</param>
        </member>
        <member name="M:CommandLine.HelpText.AddOptions(System.Object)">
            <summary>
            Adds a text block with options usage informations.
            </summary>
            <param name="options">The instance that collected command line arguments parsed with <see cref="T:CommandLine.Parser"/> class.</param>
        </member>
        <member name="M:CommandLine.HelpText.AddOptions(System.Object,System.String)">
            <summary>
            Adds a text block with options usage informations.
            </summary>
            <param name="options">The instance that collected command line arguments parsed with <see cref="T:CommandLine.Parser"/> class.</param>
            <param name="requiredWord">The word to use when the option is required.</param>
        </member>
        <member name="M:CommandLine.HelpText.ToString">
            <summary>
            Returns the help informations as a <see cref="T:System.String"/>.
            </summary>
            <returns>The <see cref="T:System.String"/> that contains the help informations.</returns>
        </member>
        <member name="M:CommandLine.HelpText.op_Implicit(CommandLine.HelpText)~System.String">
            <summary>
            Converts the help informations to a <see cref="T:System.String"/>.
            </summary>
            <param name="info">This <see cref="T:CommandLine.HelpText"/> instance.</param>
            <returns>The <see cref="T:System.String"/> that contains the help informations.</returns>
        </member>
        <member name="P:CommandLine.HelpText.Copyright">
            <summary>
            Sets the copyright information string.
            You can directly assign a <see cref="T:CommandLine.CopyrightInfo"/> instance.
            </summary>
        </member>
        <member name="T:CommandLine.BaseOptionAttribute">
            <summary>
            Provides base properties for creating an attribute, used to define rules for command line parsing.
            </summary>
        </member>
        <member name="P:CommandLine.BaseOptionAttribute.ShortName">
            <summary>
            Short name of this command line option. This name is usually a single character.
            </summary>
        </member>
        <member name="P:CommandLine.BaseOptionAttribute.LongName">
            <summary>
            Long name of this command line option. This name is usually a single english word.
            </summary>
        </member>
        <member name="P:CommandLine.BaseOptionAttribute.Required">
            <summary>
            True if this command line option is required.
            </summary>
        </member>
        <member name="P:CommandLine.BaseOptionAttribute.HelpText">
            <summary>
            A short description of this command line option. Usually a sentence summary. 
            </summary>
        </member>
        <member name="T:CommandLine.ValueListAttribute">
            <summary>
            Models a list command line arguments that are not options.
            Must be applied to a field compatible with a <see cref="T:System.Collections.Generic.IList`1"/> interface
            of <see cref="T:System.String"/> instances.
            </summary>
        </member>
        <member name="M:CommandLine.ValueListAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandLine.ValueListAttribute"/> class.
            </summary>
            <param name="concreteType"></param>
        </member>
        <member name="T:CommandLine.CopyrightInfo">
            <summary>
            Models the copyright informations part of an help text.
            You can assign it where you assign any <see cref="T:System.String"/> instance.
            </summary>
        </member>
        <member name="M:CommandLine.CopyrightInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CommandLine.CopyrightInfo"/> class.
            </summary>
        </member>
        <member name="M:CommandLine.CopyrightInfo.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandLine.CopyrightInfo"/> class
            specifying author and year.
            </summary>
            <param name="author">The company or person holding the copyright.</param>
            <param name="year">The year of coverage of copyright.</param>
        </member>
        <member name="M:CommandLine.CopyrightInfo.#ctor(System.String,System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:CommandLine.CopyrightInfo"/> class
            specifying author and years.
            </summary>
            <param name="author">The company or person holding the copyright.</param>
            <param name="years">The years of coverage of copyright.</param>
        </member>
        <member name="M:CommandLine.CopyrightInfo.#ctor(CommandLine.CopyrightInfo.Symbol,System.String,System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:CommandLine.CopyrightInfo"/> class
            specifying symbol case, author and years.
            </summary>
            <param name="symbol">The case of the copyright symbol.</param>
            <param name="author">The company or person holding the copyright.</param>
            <param name="years">The years of coverage of copyright.</param>
        </member>
        <member name="M:CommandLine.CopyrightInfo.ToString">
            <summary>
            Returns the copyright informations as a <see cref="T:System.String"/>.
            </summary>
            <returns>The <see cref="T:System.String"/> that contains the copyright informations.</returns>
        </member>
        <member name="M:CommandLine.CopyrightInfo.op_Implicit(CommandLine.CopyrightInfo)~System.String">
            <summary>
            Converts the copyright informations to a <see cref="T:System.String"/>.
            </summary>
            <param name="info">This <see cref="T:CommandLine.CopyrightInfo"/> instance.</param>
            <returns>The <see cref="T:System.String"/> that contains the copyright informations.</returns>
        </member>
        <member name="M:CommandLine.CopyrightInfo.FormatYears(System.Int32[])">
            <summary>
            When overridden in a derived class, allows to specify a new algorithm to render copyright years
            as a <see cref="T:System.String"/> instance.
            </summary>
            <param name="years"></param>
            <returns></returns>
        </member>
        <member name="P:CommandLine.CopyrightInfo.CopyrightWord">
            <summary>
            When overridden in a derived class, allows to specify a different copyright word.
            </summary>
        </member>
        <member name="T:CommandLine.CopyrightInfo.Symbol">
            <summary>
            Specifies the case of the copyright symbol.
            </summary>
        </member>
        <member name="F:CommandLine.CopyrightInfo.Symbol.LowerCase">
            <summary>
            The copyright symbol will be of lower case.
            </summary>
        </member>
        <member name="F:CommandLine.CopyrightInfo.Symbol.UpperCase">
            <summary>
            The copyright symbol will be of upper case.
            </summary>
        </member>
        <member name="T:CommandLine.IncompatibleTypesException">
            <summary>
            Represents the exception that is thrown when an attempt to assign incopatible types.
            </summary>
        </member>
        <member name="T:CommandLine.OptionAttribute">
            <summary>
            Models an option specification.
            </summary>
        </member>
        <member name="M:CommandLine.OptionAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandLine.OptionAttribute"/> class.
            </summary>
            <param name="shortName">The short name of the option or null if not used.</param>
            <param name="longName">The long name of the option or null if not used.</param>
        </member>
        <member name="T:CommandLine.Parser">
            <summary>
            Provides methods to parse command line arguments.
            </summary>
        </member>
        <member name="M:CommandLine.Parser.ParseArguments(System.String[],System.Object)">
            <summary>
            Parses a <see cref="T:System.String"/> array of command line arguments,
            setting values read in <paramref name="options"/> parameter instance.
            </summary>
            <param name="args">A <see cref="T:System.String"/> array of command line arguments.</param>
            <param name="options">An instance to receive values.
            Parsing rules are defined using <see cref="T:CommandLine.BaseOptionAttribute"/> derived types.</param>
            <returns>True if parsing process succeed.</returns>
        </member>
        <member name="M:CommandLine.Parser.ParseArguments(System.String[],System.Object,System.IO.TextWriter)">
            <summary>
            Parses a <see cref="T:System.String"/> array of command line arguments,
            setting values read in <paramref name="options"/> parameter instance.
            This overloads allows you to specify a <see cref="T:System.IO.TextWriter"/>
            derived instance for write text messages.         
            </summary>
            <param name="args">A <see cref="T:System.String"/> array of command line arguments.</param>
            <param name="options">An instance to receive values.
            Parsing rules are defined using <see cref="T:CommandLine.BaseOptionAttribute"/> derived types.</param>
            <param name="helpWriter">Any instance derived from <see cref="T:System.IO.TextWriter"/>,
            usually <see cref="P:System.Console.Out"/>.</param>
            <returns>True if parsing process succeed.</returns>
        </member>
        <member name="T:CommandLine.HelpOptionAttribute">
            <summary>
            Indicates the instance method that must be invoked when it becomes necessary show your help screen.
            The method signature is an instance method with no parameters and <see cref="T:System.String"/>
            return value.
            </summary>
        </member>
        <member name="M:CommandLine.HelpOptionAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CommandLine.HelpOptionAttribute"/> class.
            </summary>
        </member>
        <member name="M:CommandLine.HelpOptionAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandLine.HelpOptionAttribute"/> class.
            Allows you to define short and long option names.
            </summary>
            <param name="shortName">The short name of the option or null if not used.</param>
            <param name="longName">The long name of the option or null if not used.</param>
        </member>
        <member name="P:CommandLine.HelpOptionAttribute.Required">
            <summary>
            Returns always false for this kind of option.
            This behaviour can't be changed by design; if you try set <see cref="P:CommandLine.HelpOptionAttribute.Required"/>
            an <see cref="T:System.InvalidOperationException"/> will be thrown.
            </summary>
        </member>
    </members>
</doc>
